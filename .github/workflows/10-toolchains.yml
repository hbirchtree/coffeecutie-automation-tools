name: Build toolchains
'on':
    push:
        branches:
            - master
        tags:
            - v*

jobs:
    ReleaseCreate:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  path: source
            - name: Checking branch
              run: echo "Currently received $GITHUB_REF"
            - name: Create release
              if: startsWith(github.ref, 'refs/tags/')
              working-directory: ${{ github.workspace }}/source
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: >
                  gh release create ${GITHUB_REF:10}
                  -R ${{ github.repository }}
                  -p
                  -t "Automatic Release ${GITHUB_REF:10}"
                  -n 'Automatically generated by Actions'
                  --target ${{ github.sha }}

    Ubuntu:
        runs-on: ubuntu-latest
        needs: ReleaseCreate
        env:
            CTNG: '${{ github.workspace }}/crosstool-ng-master/ct-ng'
        strategy:
            matrix:
                system:
                    - name: beaglebone
                      arch: arm-unknown-linux-gnueabihf
                    - name: raspberry
                      arch: arm-unknown-linux-gnueabihf
                    - name: desktop
                      arch: x86_64-unknown-linux-gnu
        steps:
            - uses: actions/checkout@v2
              with:
                  path: source
            - name: Download dependencies
              run: sudo apt install -y build-essential flex bison help2man libtool-bin
            - name: Download crosstool-ng
              run: |
                  wget https://github.com/crosstool-ng/crosstool-ng/archive/master.tar.gz
                  tar xvf master.tar.gz
            - name: Install crosstool-ng
              working-directory: ${{ github.workspace }}/crosstool-ng-master
              run: |
                  ./bootstrap
                  ./configure --enable-local
                  make -j4
            - name: Build toolchain
              working-directory: ${{ github.workspace }}/source/toolchains/${{ matrix.system.name }}-ct/compiler
              run: |
                  $CTNG build.4 -e CT_PREFIX=${{ github.workspace }}/build
                  chmod -R +w ${{github.workspace}}/build/${{matrix.system.arch}}
            - name: Add Beaglebone Black libs
              if: matrix.system.name == 'beaglebone'
              run: |
                  git clone https://git.ti.com/git/graphics/omap5-sgx-ddk-um-linux.git sgx
                  cp -r sgx/targetfs/lib/* ${{ github.workspace }}/build/${{matrix.system.arch}}/${{matrix.system.arch}}/sysroot/usr/lib
                  cp -r sgx/targetfs/include/* ${{ github.workspace }}/build/${{matrix.system.arch}}/${{matrix.system.arch}}/sysroot/usr/include
            - name: Add Raspberry Pi VideoCore IV libs
              if: matrix.system.name == 'raspberry'
              run: |
                  wget https://github.com/raspberrypi/firmware/archive/master.tar.gz -O rpi-firmware.tar.gz
                  tar xvf rpi-firmware.tar.gz
                  cp -r firmware-master/hardfp/opt/vc ${{ github.workspace }}/build/${{ matrix.system.arch }}/${{ matrix.system.arch }}/sysroot
            - name: Zip up toolchain
              working-directory: ${{ github.workspace }}/build/${{ matrix.system.arch }}
              run: |
                  tar Jcf ${{ github.workspace }}/${{ matrix.system.name }}-${{ matrix.system.arch }}.tar.xz *
            - name: Create toolchain artifact
              uses: actions/upload-artifact@v2
              with:
                  name: ${{ matrix.system.name }}-${{ matrix.system.arch }}
                  path: ${{ github.workspace }}/build/${{ matrix.system.arch }}
            - name: Upload to release
              if: startsWith(github.ref, 'refs/tags/')
              working-directory: ${{ github.workspace }}/source
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: >
                  gh release upload ${GITHUB_REF:10}
                  ${{ github.workspace }}/${{ matrix.system.name }}-${{ matrix.system.arch }}.tar.xz
                  -R ${{ github.repository }}
                  --clobber
            - name: Upload manifest
              if: startsWith(github.ref, 'refs/tags/')
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                 grep '^CT_GCC_VERSION\|^CT_BINUTILS_VERSION\|^CT_GLIBC_VERSION\|^CT_LINUX_VERSION\|^CT_STRACE_VERSION\|^CT_GDB_VERSION' ${{github.workspace}}/source/toolchains/${{matrix.system.name}}-ct/compiler/.config | grep -v '^#' > ${{matrix.system.name}}-${{matrix.system.arch}}.manifest
                 gh release upload ${GITHUB_REF:10} ${{matrix.system.name}}-${{matrix.system.arch}}.manifest -R ${{github.repository}} --clobber
            - name: Build sysroot
              if: false
              working-directory: ${{ github.workspace }}/source/toolchains
              run: |
                  make ${{ matrix.system }}.sysroot
